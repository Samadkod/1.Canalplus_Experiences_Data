--------------------  SEGMENTATION SUR LA BASE DES ACTIFS ----------------------------------------------------
--------------------           ANTILLES                 -----------------------------------------------------

WITH sessions AS (
    SELECT
        CASE
            WHEN ID_PERSON LIKE '5%' AND REGEXP_LIKE(ID_PERSON, '^[0-9]+$') THEN
                TO_NUMBER(ID_PERSON) - 5000000000000 + 100000000
            ELSE NULL
        END AS ID_CLIENT,
        SPORT_CHAMPIONSHIP,
        SESSION_DURATION
    FROM PRD_HUB.WW_ANALYTICS.V_SOCLE_VIDEO
    WHERE data_source = 'socle_international'
    AND zone = 'cpant'
    AND id_person LIKE '5000%'
    AND DATE(session_start_date_utc) IN (
        '2023-08-11', '2023-08-12', '2023-08-13', '2023-08-18', '2023-08-19',
        '2023-08-20', '2023-08-25', '2023-08-26', '2023-08-27', '2023-09-01',
        '2023-09-02', '2023-09-03', '2023-09-15', '2023-09-16', '2023-09-17',
        '2023-09-22', '2023-09-23', '2023-09-24', '2023-09-26', '2023-09-29',
        '2023-09-30', '2023-10-01', '2023-10-06', '2023-10-07', '2023-10-08',
        '2023-10-20', '2023-10-21', '2023-10-22', '2023-10-27', '2023-10-28',
        '2023-10-29', '2023-11-03', '2023-11-04', '2023-11-05', '2023-11-10',
        '2023-11-11', '2023-11-12', '2023-11-24', '2023-11-25', '2023-11-26',
        '2023-11-29', '2023-12-01', '2023-12-02', '2023-12-03', '2023-12-06',
        '2023-12-07', '2023-12-08', '2023-12-09', '2023-12-10', '2023-12-15',
        '2023-12-16', '2023-12-17', '2023-12-20', '2024-01-12', '2024-01-13',
        '2024-01-14', '2024-01-26', '2024-01-27', '2024-01-28', '2024-02-02',
        '2024-02-03', '2024-02-04', '2024-02-09', '2024-02-10', '2024-02-11',
        '2024-02-16', '2024-02-17', '2024-02-18', '2024-02-23', '2024-02-24',
        '2024-02-25', '2024-03-01', '2024-03-02', '2024-03-03', '2024-03-08',
        '2024-03-09', '2024-03-10', '2024-03-15', '2024-03-16', '2024-03-17',
        '2024-03-29', '2024-03-30', '2024-03-31')
),
Conso_totale AS (
    SELECT
        ID_CLIENT,
        SUM(SESSION_DURATION) / 60.0 AS total_session_duration_minutes -- Conversion en minutes
    FROM sessions
    WHERE SPORT_CHAMPIONSHIP = 'Ligue 1 Uber Eats'
    GROUP BY ID_CLIENT
),
classif_abonne AS (
    SELECT
        CRM.ID_ABONNE,
        ct.total_session_duration_minutes,
        CASE
            WHEN ct.total_session_duration_minutes >= (1620 + 1200) THEN 'Ultra+'
            WHEN ct.total_session_duration_minutes >= (1620 + 600) AND ct.total_session_duration_minutes < (1620 + 1200) THEN 'Ultra'
            WHEN ct.total_session_duration_minutes >= 1620 AND ct.total_session_duration_minutes < (1620 + 600) THEN 'Fan'
            WHEN ct.total_session_duration_minutes >= 540 AND  ct.total_session_duration_minutes < 1620 THEN 'Occasionnel'
            WHEN ct.total_session_duration_minutes < 540 THEN 'Pas intéressé'
            ELSE 'Autre'
        END AS Segmentation_Ligue1
    FROM Conso_totale ct
    INNER JOIN PRD_DWH.CPI_CUSTOMER.CRMFH_MOIS_PARCACTIFFML CRM ON CRM.ID_CLIENT = ct.ID_CLIENT
    WHERE CRM.FLG_PARC_ACTIF = 1
),

---Segmentation des abonnés qui ne regardent jamais la ligue 
clients_never_ligue1 AS (
    SELECT
        CRM.ID_ABONNE,
        crm.id_client,
        'Jamais' AS Segmentation
    FROM (
        SELECT DISTINCT ID_CLIENT
        FROM sessions
        WHERE SPORT_CHAMPIONSHIP != 'Ligue 1 Uber Eats'
    ) h
    LEFT JOIN (
        SELECT DISTINCT ID_CLIENT
        FROM sessions
        WHERE SPORT_CHAMPIONSHIP = 'Ligue 1 Uber Eats'
    ) l ON h.ID_CLIENT = l.ID_CLIENT
    LEFT JOIN PRD_DWH.CPI_CUSTOMER.CRMFH_MOIS_PARCACTIFFML CRM ON CRM.ID_CLIENT = h.ID_CLIENT
    WHERE l.ID_CLIENT IS NULL
    AND CRM.FLG_PARC_ACTIF = 1
)
--select id_client from clients_never_ligue1 4M de lignes !

SELECT Segment, COUNT(DISTINCT ID_ABONNE) AS Nbre_abonnes
FROM (
    SELECT Segmentation_Ligue1 AS Segment, ID_ABONNE FROM classif_abonne
    UNION ALL
    SELECT Segmentation AS Segment, ID_ABONNE FROM clients_never_ligue1
) combined
GROUP BY Segment
ORDER BY Nbre_abonnes ASC;


-------------------------   SEGMENTATION ACTIF PAR FORMULES---------------------------
------------------------  Methode 1: Correct-----------------------------------------

WITH sessions AS (
    SELECT
        CASE
            WHEN ID_PERSON LIKE '5%' AND REGEXP_LIKE(ID_PERSON, '^[0-9]+$') THEN
                TO_NUMBER(ID_PERSON) - 5000000000000 + 100000000
            ELSE NULL
        END AS ID_CLIENT,
        SPORT_CHAMPIONSHIP,
        SESSION_DURATION
    FROM PRD_HUB.WW_ANALYTICS.V_SOCLE_VIDEO
    WHERE data_source = 'socle_international'
    AND zone = 'cpant'
    AND id_person LIKE '5000%'
    AND DATE(session_start_date_utc) IN (
          '2023-08-11','2023-08-12', '2023-08-13', '2023-08-18', '2023-08-19',
          '2023-08-20', '2023-08-25', '2023-08-26', '2023-08-27', '2023-09-01',
          '2023-09-02', '2023-09-03', '2023-09-15', '2023-09-16', '2023-09-17',
          '2023-09-22', '2023-09-23', '2023-09-24', '2023-09-26', '2023-09-29',
          '2023-09-30', '2023-10-01', '2023-10-06', '2023-10-07', '2023-10-08',
          '2023-10-20', '2023-10-21', '2023-10-22', '2023-10-27', '2023-10-28',
          '2023-10-29', '2023-11-03', '2023-11-04', '2023-11-05', '2023-11-10',
          '2023-11-11', '2023-11-12', '2023-11-24', '2023-11-25', '2023-11-26',
          '2023-11-29', '2023-12-01', '2023-12-02', '2023-12-03', '2023-12-06',
          '2023-12-07', '2023-12-08', '2023-12-09', '2023-12-10', '2023-12-15',
          '2023-12-16', '2023-12-17', '2023-12-20', '2024-01-12', '2024-01-13',
          '2024-01-14', '2024-01-26', '2024-01-27', '2024-01-28', '2024-02-02',
          '2024-02-03', '2024-02-04', '2024-02-09', '2024-02-10', '2024-02-11',
          '2024-02-16', '2024-02-17', '2024-02-18', '2024-02-23', '2024-02-24',
          '2024-02-25', '2024-03-01', '2024-03-02', '2024-03-03', '2024-03-08',
          '2024-03-09', '2024-03-10', '2024-03-15', '2024-03-16', '2024-03-17',
          '2024-03-29', '2024-03-30', '2024-03-31')
),

Conso_totale AS (
    SELECT
        ID_CLIENT,
        SUM(SESSION_DURATION) / 60.0 AS total_session_duration_minutes -- Conversion en minutes
    FROM sessions
    WHERE SPORT_CHAMPIONSHIP = 'Ligue 1 Uber Eats'
    GROUP BY ID_CLIENT
),

latest_formula AS (
    SELECT
        CRM.ID_ABONNE,
        CRM.ID_FORMULE,
       --CRM.FLG_PARC_ACTIF, --pourquoi dans la clause SELECT ? MANQUANT dans la clause WHERE
        RefFml.Libcourt_formule,
        --RefFin.lib_nom_perimetreconso,--pourquoi dans la clause SELECT ?
        ROW_NUMBER() OVER (PARTITION BY CRM.ID_ABONNE ORDER BY CRM.DAT_MAJ_PHT DESC) AS rn --pourquoi pas utilisé dans la clause where ????
    FROM PRD_DWH.CPI_CUSTOMER.CRMFH_MOIS_PARCACTIFFML CRM
    LEFT JOIN "PRD_DWH"."CPI_REF"."REF_RGRFORMULFAMIL_2" RefFml ON CRM.ID_FORMULE = RefFml.IDLN_FORMULFAMIL
    LEFT JOIN "PRD_DWH"."CPI_REF"."REF_RGRORGAFIN_3" RefFin_3 ON CRM.ID_ORGFIN = RefFin_3.IDLN_ORGAFIN
    LEFT JOIN "PRD_DWH"."CPI_REF"."REF_RGRORGAFIN_2" RefFin_2 ON RefFin_3.ID_ORGAFIN_2 = RefFin_2.ID_ORGAFIN_2
    LEFT JOIN "PRD_DWH"."CPI_REF"."REF_RGRORGAFIN_1" RefFin ON RefFin_2.ID_ORGAFIN_1 = RefFin.ID_ORGAFIN_1
    WHERE CRM.DAT_MAJ_PHT BETWEEN '2023-08-11' AND '2024-03-31'
    AND RefFin.lib_nom_perimetreconso = 'COS'
    AND (CRM.ID_TYP_ABONNE = 2 OR CRM.ID_FORMULE NOT IN (7, 24, 26, 382, 481))
    AND CRM.FLG_PARC_ACTIF=1
    AND rn=1
),

classif_abonne AS (
SELECT CRM.ID_ABONNE,ct.total_session_duration_minutes,
CASE WHEN ct.total_session_duration_minutes >= (1620 + 1200) THEN 'Ultra+'
WHEN ct.total_session_duration_minutes >= (1620 + 600) AND ct.total_session_duration_minutes < (1620 + 1200) THEN 'Ultra'
            WHEN ct.total_session_duration_minutes >= 1620 AND ct.total_session_duration_minutes < (1620 + 600) THEN 'Fan'
            WHEN ct.total_session_duration_minutes >= 540 AND ct.total_session_duration_minutes < 1620 THEN 'Occasionnel'
            WHEN ct.total_session_duration_minutes < 540 THEN 'Pas intéressé'
            ELSE 'Autre'
        END AS Segmentation_Ligue1,
        lf.Libcourt_formule AS Formule
    FROM Conso_totale ct
    INNER JOIN PRD_DWH.CPI_CUSTOMER.CRMFH_MOIS_PARCACTIFFML CRM ON CRM.ID_CLIENT = ct.ID_CLIENT -- pourquoi rajouter cette table encore une fois ?
    LEFT JOIN latest_formula lf ON lf.ID_ABONNE = CRM.ID_ABONNE AND lf.rn = 1 ------ CLAUSE WHERE ??
    WHERE CRM.FLG_PARC_ACTIF = 1
),

clients_never_ligue1 AS (
    SELECT
        CRM.ID_ABONNE,
        'Jamais' AS Segmentation,
        lf.Libcourt_formule AS Formule
    FROM (
        SELECT DISTINCT ID_CLIENT
        FROM sessions
        WHERE SPORT_CHAMPIONSHIP != 'Ligue 1 Uber Eats'
    ) h
    LEFT JOIN (
        SELECT DISTINCT ID_CLIENT
        FROM sessions
        WHERE SPORT_CHAMPIONSHIP = 'Ligue 1 Uber Eats'
    ) l ON h.ID_CLIENT = l.ID_CLIENT
    LEFT JOIN PRD_DWH.CPI_CUSTOMER.CRMFH_MOIS_PARCACTIFFML CRM ON CRM.ID_CLIENT = h.ID_CLIENT
    LEFT JOIN latest_formula lf ON lf.ID_ABONNE = CRM.ID_ABONNE AND lf.rn = 1
    WHERE l.ID_CLIENT IS NULL
    AND CRM.FLG_PARC_ACTIF = 1
)
SELECT Segment, Formule, COUNT(DISTINCT ID_ABONNE) AS Nbre_abonnes
FROM (
    SELECT Segmentation_Ligue1 AS Segment, Formule, ID_ABONNE FROM classif_abonne
    UNION ALL
    SELECT Segmentation AS Segment, Formule, ID_ABONNE FROM clients_never_ligue1
) combined
GROUP BY Segment, Formule
ORDER BY Segment, Nbre_abonnes ASC;